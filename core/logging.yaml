version: 1
formatters:
  simple:
    format: '%(name)s, %(funcName)s, %(levelname)s, %(message)s'
  csv:
    format: '%(asctime)s.%(msecs)03d,%(module)s,%(funcName)s,%(levelname)s,"%(message)s"'
    datefmt: '%Y-%m-%d %H:%M:%S'
  debug:
    format: "%(name)s, %(funcName)s, %(levelname)s, %(module)s, %(message)s %(pathname)s:%(lineno)d"
filters:
  debug:
    (): core.logging_filters.DebugFilter
handlers:
  console:
    class: logging.StreamHandler
    level: 0
    formatter: simple
    stream: ext://sys.stdout
  file:
    class: logging.handlers.WatchedFileHandler
    level: 0
    formatter: simple
    filename: logs/example.log
    mode: a
    delay: True
  csv:
    class: core.logging_handlers.CsvHandler
    level: 0
    formatter: csv
    format_string: TIMESTAMP,MODULE,FUNCTION,LEVEL,MESSAGE
    filename: logs/log.csv
    new_file: True
    delay: False
  RoveCommUDP:
    class: core.logging_handlers.RoveCommHandlerUDP
    level: 0
    formatter: simple
    level: INFO
    target_host: 127.0.0.1
    target_port: 11000
  RoveCommTCP:
    class: core.logging_handlers.RoveCommHandlerTCP
    level: 0
    formatter: simple
    level: INFO
    target_host: 127.0.0.1
    target_port: 11111
  Debug:
    class: logging.StreamHandler
    formatter: debug
loggers:
  Logging_Test:
    level: DEBUG
    handlers: [RoveCommTCP, RoveCommUDP, Debug]
  core.basestation_send:
    level: DEBUG
    handlers: [RoveCommTCP]
  matplotlib:
    level: INFO
    handlers: [console, csv]
    propagate: False
root:
  level: DEBUG
  handlers: [csv, Debug]
